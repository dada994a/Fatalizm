package we.devs.forever.client.modules.impl.exploit;

import net.minecraft.item.*;
import net.minecraft.network.play.client.CPacketEntityAction;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.network.play.client.CPacketPlayerTryUseItem;
import net.minecraft.util.EnumHand;
import we.devs.forever.api.event.events.network.PacketEvent;
import we.devs.forever.api.event.eventsys.annotated.handler.annotation.EventListener;
import we.devs.forever.client.command.api.Command;
import we.devs.forever.client.modules.api.Module;
import we.devs.forever.client.setting.Setting;

public class FastProjectile extends Module {

    private boolean shooting;
    private long lastShootTime;

    public FastProjectile() {
        super("FastProjectile", "Uno hitter w bows", Category.EXPLOIT);
    }
    public Setting<Boolean> bows = (new Setting<>("Bows", false));
    public Setting<Boolean> pearls = (new Setting<>("Pearls", true));
    public Setting<Boolean> eggs = (new Setting<>("Eggs", false));
    public Setting<Boolean> snowBalls = (new Setting<>("SnowBalls", false));
    public Setting<Integer> timeout = (new Setting<>("Timeout", 100, 100, 20000));
    public Setting<Integer> spoofs = (new Setting<>("Spoofs", 25, 1, 300));
    public Setting<Boolean> bypass = (new Setting<>("Bypass", false));
    public Setting<Boolean> debug = (new Setting<>("Debug", false));


    @Override
    public void onEnable() {
        if ( this.isEnabled()) {
            shooting = false;
            lastShootTime = System.currentTimeMillis();
        }
    }

    @EventListener
    public void onPacketSend(PacketEvent.Send event) {
        if (event.getStage() != 0) return;
        if (event.getPacket() instanceof CPacketPlayerDigging) {
            CPacketPlayerDigging packet = event.getPacket();
            if (packet.getAction() == CPacketPlayerDigging.Action.RELEASE_USE_ITEM) {
                ItemStack handStack = mc.player.getHeldItem(EnumHand.MAIN_HAND);
                if (!handStack.isEmpty() && handStack.getItem() != null && handStack.getItem() instanceof ItemBow && bows.getValue()) {
                    doSpoofs();
                    if (debug.getValue()) Command.sendMessage("trying to spoof");
                }
            }
        } else if (event.getPacket() instanceof CPacketPlayerTryUseItem) {
            CPacketPlayerTryUseItem packet2 = event.getPacket();
            if (packet2.getHand() == EnumHand.MAIN_HAND) {
                ItemStack handStack = mc.player.getHeldItem(EnumHand.MAIN_HAND);
                if (!handStack.isEmpty() && handStack.getItem() != null) {
                    if (handStack.getItem() instanceof ItemEgg && eggs.getValue()) {
                        doSpoofs();
                    } else if (handStack.getItem() instanceof ItemEnderPearl && pearls.getValue()) {
                        doSpoofs();
                    } else if (handStack.getItem() instanceof ItemSnowball && snowBalls.getValue()) {
                        doSpoofs();
                    }
                }
            }
        }
    }

    private void doSpoofs() {
        if (System.currentTimeMillis() - lastShootTime >= timeout.getValue()) {
            shooting = true;
            lastShootTime = System.currentTimeMillis();
            mc.player.connection.sendPacket(new CPacketEntityAction(mc.player, CPacketEntityAction.Action.START_SPRINTING));
            for (int index = 0; index < spoofs.getValue(); ++index) {
                if (bypass.getValue()) {
                    mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + 1e-10, mc.player.posZ, false));
                    mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY - 1e-10, mc.player.posZ, true));
                } else {
                    mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY - 1e-10, mc.player.posZ, true));
                    mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + 1e-10, mc.player.posZ, false));
                }

            }
            if (debug.getValue()) Command.sendMessage("Spoofed");
            shooting = false;
        }
    }
}