package we.devs.forever.client.modules.impl.exploit;

import net.minecraft.entity.player.EntityPlayer;
import we.devs.forever.api.event.events.render.Render3DEvent;
import we.devs.forever.api.util.combat.PredictUtil;
import we.devs.forever.api.util.render.RenderUtil;
import we.devs.forever.client.modules.api.Module;
import we.devs.forever.client.setting.Setting;
import we.devs.forever.client.ui.foreverClientGui.components.items.buttons.ColorPickerButton;

import java.awt.*;

public class Predict extends Module {
    private final Setting<Boolean> staticc = (new Setting<>("Static", true));
    private final Setting<Integer> testPitchNet = (new Setting<>("PredictTics", 1, 0, 30));
    public Setting<Boolean> HolePredict = (new Setting<>("Collision", true));
    public Setting<Color> boxColor = (new Setting<>("BoxColor", new Color(21, 107, 183, 255), ColorPickerButton.Mode.Normal, 100));
    public Setting<Color> outlineColor = (new Setting<>("OutLineColor", new Color(21, 107, 183, 255), ColorPickerButton.Mode.Normal, 100));

    private final Setting<Float> lineWidth = (new Setting<>("LineWidth", 1.0f, 0.1f, 5.0f));
    private double distance;

    public Predict() {
        super("Predict", "Renders a chorus sound packet.", Category.EXPLOIT);
    }


    @Override
    public void onRender3D(Render3DEvent render3DEvent) {
        if (fullNullCheck()) {
            return;
        }
        EntityPlayer player = PredictUtil.getPredictedEntity(mc.player,testPitchNet.getValue(),HolePredict.getValue()).getFirst();
        distance = mc.player.getDistance(player.posX, player.posY, player.posZ);
        RenderUtil.drawPlayerModel(
                new double[]{player.posX, player.posY, player.posZ},
                player,
                boxColor.getColor(),
                outlineColor.getColor(),
                lineWidth.getValue(),
                staticc.getValue());
    }

    @Override
    public String getDisplayInfo() {
        return String.valueOf(distance);
    }
}

